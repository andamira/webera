#!/usr/bin/env bash
#
# This script generates the examples from ../examples/ to ../docs/
#


#-------------------------------------------------------------------------------
# ::main
#
# > $@ : all the arguments passed to the script
#
generate::main() {

	local Opt_log_level=0
	local Opt_log_clear=''
	local Opt_preview_in_web_browser=false;

	local Dir
	Dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
	local Webera="$Dir/../webera"
	local Log_file="$Dir/examples.log"
	local Output="$Dir/../docs"

	generate::parse-arguments "$@"

	generate::generate-all

	printf "\nDone.\n"

	if [ "$Opt_preview_in_web_browser" = true ]; then
		$Webera -wO "$Output"
	fi

} # ::main


#-------------------------------------------------------------------------------
# ::display-usage
#
#   Displays usage info and exits.
#
generate::display-usage() {

	cat <<- ENDUSAGE

	Generates every example.

	generate::display-usage: ./generate-examples [optionS]

	  -w              preview in web browser
	  -L <NUMBER>     log level [0=none|1|2|3] ($Opt_log_level)
	  -c              switch clearing the log file (clear=$Opt_log_clear)
	ENDUSAGE
	exit 1

} # ::display-usage


#-------------------------------------------------------------------------------
# ::parse-arguments
#
#   Parses the script arguments.
#
# > $@ : all the arguments passed to the script
#
generate::parse-arguments() {
	local OPTIND option
	while getopts 'wL:ch' option; do

		case "$option" in
			w) Opt_preview_in_web_browser=true ;;
			L) Opt_log_level="$OPTARG" ;;
			c) Opt_log_clear=true ;;
			h|*) generate::display-usage; exit ;;
		esac
	done

} # ::parse-arguments


#-------------------------------------------------------------------------------
# ::generate-all
#
#   Generates all the examples.
#   They must be under ../examples/ and start with an alphanumeric character.
#
generate::generate-all() {

	cd "$Dir" || exit

	[[ $Opt_log_clear == true ]] && rm -- "$Log_file" 2>/dev/null

	local examples_list
	examples_list=$(find . -maxdepth 1 -name "[0-9a-zA-Z]*" -type d \
		| cut -d'/' -f2 \
		| grep -v '^\.\+$' \
		| sort | tac | \
		tr '\n' ' ')

	for example in $examples_list; do
		cd "$example" || exit

		printf 'generating '%s'. . . \n' "$example"

		"$Webera" -rt -L"${Opt_log_level}" -G "$Log_file"

		cd "$Dir" || exit
	done

} # ::generate-all


[[ $0 == "${BASH_SOURCE[0]}" ]] && generate::main "$@"
