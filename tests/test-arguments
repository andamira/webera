#!/usr/bin/env bash

## Include

cd -- "${BASH_SOURCE%/*}" || exit 1
# shellcheck disable=SC1091
source ./helper


## Test

test_arguments() {
	declare default newval

	test_h1 "Script Arguments"
	# ========================


	test_h2 "Usage"
	# =====

#
	assert_raises "webera" "1"
#
	assert "webera -h | grep '^Usage' | cut -d' ' -f1-2" \
		"Usage: ./webera"


	test_h2 "Debug"
	# =====

#
	assert_success  "webera -_"

	local -r defaults="$(webera -_)"
#
	# Check expected format, and the minimum number of arguments
	newval=$(echo "$defaults" | grep -c '^\[[a-z]\+\]:.\+=')
	assert_success "[[ $newval -ge 25 ]]" # give a safe margin


	test_h2 "Main Flags"
	# =====

#    -t process templates
	newval=$(weberaVarValue "$(webera -_t)" \
		'args' '_DO_PROCESS_TEMPLATES')
	assert "echo $newval" "true"
#    -r process resources
	newval=$(weberaVarValue "$(webera -_r)" \
		'args' '_DO_PROCESS_RESOURCES')
	assert "echo $newval" "true"
#    -w preview
	newval=$(weberaVarValue "$(webera -_w)" \
		'args' '_DO_PREVIEW_IN_BROWSER')
	assert "echo $newval" "true"
#    -n generate a new config file
	newval=$(weberaVarValue "$(webera -_n)" \
		'args' '_DO_GENERATE_CONFIG_FILE')
	assert "echo $newval" "true"


	test_h2 "Config as string"
	# =====

#    -C config string
	default=$(weberaVarValue "$defaults" 'vdef' '_CONFIG_STRING')
	assert "echo $default"
#
	newval=$(weberaVarValue "$(webera -_C "config:DIR_TEMPLATES:tem5")" \
		'strn' 'DIR_TEMPLATES')
	assert "echo $newval" "tem5"


	test_h2 "File Paths"
	# =====

#   # -F config file
	default=$(weberaVarValue "$defaults" 'vdef' '_CONFIG_FILE')
	assert "echo $default" ".weberarc"
#
	newval=$(weberaVarValue "$(webera -_F test_weberarc)" \
		'args' '_CONFIG_FILE')
	assert "echo $newval" "test_weberarc"


	test_h2 "Dir Paths"
	# =====

#    -T templates dir
	default=$(weberaVarValue "$defaults" 'vdef' 'DIR_TEMPLATES')
	assert "echo $default" "tem"
#
	newval=$(weberaVarValue "$(webera -_T test_tem)" \
		'args' 'DIR_TEMPLATES')
	assert "echo $newval" "test_tem"

#    -R resources dir
	default=$(weberaVarValue "$defaults" 'vdef' 'DIR_RESOURCES')
	assert "echo $default" "res"
#
	newval=$(weberaVarValue "$(webera -_R test_res)" \
		'args' 'DIR_RESOURCES')
	assert "echo $newval" "test_res"

#   -O output dir
	default=$(weberaVarValue "$defaults" 'vdef' 'DIR_OUTPUT')
	assert "echo $default" "out"
#
	newval=$(weberaVarValue "$(webera -_O test_out)" \
		'args' 'DIR_OUTPUT')
	assert "echo $newval" "test_out"

#    -B build dir
	default=$(weberaVarValue "$defaults" 'vdef' 'DIR_BUILD')
	assert "echo $default" "build"
#
	newval=$(weberaVarValue "$(webera -_B test_build)" \
		'args' 'DIR_BUILD')
	assert "echo $newval" "test_build"


	test_h2 "Switch Flags"
	# =====

#    -d delete output dir
	default=$(weberaVarValue "$defaults" \
		'vdef' '_OPTION_DELETE_DIR_OUTPUT')
	assert "echo $default" "true"
#
	newval=$(weberaVarValue "$(webera -_d)" \
		'args' '_OPTION_DELETE_DIR_OUTPUT')
	assert "echo $newval" "false"

#    -c clear log file
	default=$(weberaVarValue "$defaults" \
		'vdef' '_OPTION_LOG_CLEAR')
	assert "echo $default" "false"
#
	newval=$(weberaVarValue "$(webera -_c)" \
		'args' '_OPTION_LOG_CLEAR')
	assert "echo $newval" "true"


	test_h2 "Log"
	# =====

#    -L log level
	default=$(weberaVarValue "$defaults" 'vdef' 'OPTION_LOG_LEVEL')
	assert "echo $default" "0"
#
	newval=$(weberaVarValue "$(webera -_L3)" \
		'args' 'OPTION_LOG_LEVEL')
	assert "echo $newval" "3"

#    -G log file
	default=$(weberaVarValue "$defaults" 'vdef' 'LOG_FILE')
	assert "echo $default" "log.txt"
#
	newval=$(weberaVarValue "$(webera -_G test_logfile)" \
		'args' 'LOG_FILE')
	assert "echo $newval" "test_logfile"


	test_h2 "Website Preview"
	# =====

#    -W web browser
    # SEMIBUG_20161212: this one makes kcov fail
	default=$(weberaVarValue "$defaults" 'vdef' 'WEB_BROWSER')
	assert "echo $default" "firefox"
#
	newval=$(weberaVarValue "$(webera -_W test_browser)" \
		'args' 'WEB_BROWSER')
	assert "echo $newval" "test_browser"

#    -S server type
	default=$(weberaVarValue "$defaults" 'vdef' 'SERVER_TYPE')
	assert "echo $default" "python"
#
	newval=$(weberaVarValue "$(webera -_S test_custom)" \
		'args' 'SERVER_TYPE')
	assert "echo $newval" "test_custom"

#    -H host
	default=$(weberaVarValue "$defaults" 'vdef' 'SERVER_HOST')
	assert "echo $default" "localhost"
#
	newval=$(weberaVarValue "$(webera -_H test_host)" \
		'args' 'SERVER_HOST')
	assert "echo $newval" "test_host"

#    -P port
	default=$(weberaVarValue "$defaults" 'vdef' 'SERVER_PORT')
	assert "echo $default" "8192"
#
	newval=$(weberaVarValue "$(webera -_P 9000)" \
		'args' 'SERVER_PORT')
	assert "echo $newval" "9000"


	test_h2 "Misc."
	# =====

#    using -h still parses the rest of the arguments
	newval=$(weberaVarValue "$(webera -_hP 7000)" \
		'args' 'SERVER_PORT')
	assert "echo $newval" "7000"


} #test_arguments()

test_arguments
test_summary 'arguments'
