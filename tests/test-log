#!/usr/bin/env bash
#
# Tests for logging
#
# TODO:
# - test prelog
# - min max log level
# - test missing arguments, and the set defaults


#-------------------------------------------------------------------------------
#
test::init() {

	# Change to the directory where this script is located
	if [[ "${BASH_SOURCE%/*}" != "${BASH_SOURCE[0]}" ]]; then
		cd -- "${BASH_SOURCE%/*}" || exit 1
	fi

	# shellcheck disable=SC1091
	source ./helper &>/dev/null

	# Run tests
	test_setup
	test::suite
	test_teardown

	test_summary 'log'

} #test::init()


#-------------------------------------------------------------------------------
# ::suite
#
test::suite() {

	local logFile="$DIR_WORKDIR/webera_test_logfile"


	test_h1 "Logging"
	# ===================


	# test_h2 "prelog"
	# ~~~~~~~~~~~~~~~~~~~~~~~~
	# test_clean



	test_h2 "log levels"
	# ~~~~~~~~~~~~~~~~~~~~~~~~


	# T: no log [logLevel=0 < LOG_LEVEL=$MIN] (lower limits)
	test_clean
	test::log-wrapper false 0 1 "" "no log"
	assert "cat $logFile" ""

	# T: no log [logLevel<0 < LOG_LEVEL=$MIN] (negative number)
	test_clean
	test::log-wrapper false -3 1 "" "no log"
	assert "cat $logFile" ""

	# T: no log [logLevel < LOG_LEVEL=$MAX] (higher limits)
	test_clean
	test::log-wrapper false 2 3 "" "no log"
	assert "cat $logFile" ""

	# T: no log [logLevel=0; LOG_LEVEL=0]
	test_clean
	test::log-wrapper false 0 0 "" "no log"
	assert "cat $logFile" ""

	# T: log [logLevel == LOG_LEVEL = 1]
	test_clean
	test::log-wrapper false 1 1 "" "log 1"
	assert "cat $logFile" "log 1"

	# T: log if log level is greater
	test_clean
	test::log-wrapper false 3 2 "" "log 2"
	assert "cat $logFile" "log 2"




	# test_h2 "other"
	# ~~~~~~~~~~~~~~~~~~~~~~~~
	# test_clean

	# T: .


	# T: log file exists
	#assert_success "[[ -f log.txt ]]"


	#test_h2 "File config contents"
	# ~~~~~~~~~~~~~~~~~~~~~~~~
	#test_clean

	# cat <<- EOF > .test_weberarc
	# These contents will be written to the file.
	# EOF

} #::suite()


#-------------------------------------------------------------------------------
# ::log-wrapper
#
#   a wrapper for the log function
#
# > $1 : (bool) [envir] _PRELOG
# > $2 : (int)  [envir] LOG_LEVEL
#
# > $3 : (int)  [local] logLevel
# > $4 : (str)  [local] logType
# > $5 : (str)  [local] logMessage
#
# shellcheck disable=SC2034
test::log-wrapper() {
	(
		_PRELOG="$1"; LOG_LEVEL="$2"; LOG_FILE="$logFile"
		webera::log "$3" "$4" "$5"
	)
} #::log-wrapper()


[[ "$0" == "${BASH_SOURCE[0]}" ]] && test::init "$@"
