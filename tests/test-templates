#!/usr/bin/env bash
#
# Tests for templates
#
# TODO:
# - directives
# - nesting
# - multiple levels
# - special characters
#


#-------------------------------------------------------------------------------
# ::init
#
# > $1 : when equals "run-all-tests", common test data cleanup wont happen here
#
test::init() {

	# Change to the directory where this script is located
	if [[ "${BASH_SOURCE%/*}" != "${BASH_SOURCE[0]}" ]]; then
		cd -- "${BASH_SOURCE%/*}" || exit 1
	fi

	# shellcheck disable=SC1091
	source ./helper &>/dev/null

	# Run tests
	test_setup
	test::suite
	test_teardown

	test_summary "templates"

	# Only do the final cleanup when the script is run independently
	[[ $1 != RUN_ALL_TESTS ]] && test_final_cleanup

} #::init()


#-------------------------------------------------------------------------------
# ::suite
#
test::suite() {

	declare dir_tem='tem' dir_out='out' #dir_build='build'
	#declare templ_simpl templ_head templ_content templ_footer
	#declare content_directives content_metadata

	# To parse or not to parse
	#declare some_cmd #some_set some_setcmd
	#declare some_utf-8
	#declare some_comment1 some_comment2

	# A template for the most simple and the more advanced tests
	templ_simpl=$(cat <<- 'HTML_EOF'
	<!DOCTYPE html>
	<html lang="{{LANG}}">
	<head>
	    <meta charset="utf-8">
	    <title>{{TITLE}}</title>
	</head>
	<body>
	    <-- %include content.html -->
	</body>
	<-- %include footer.html  -->
	</html>
	HTML_EOF
	)
	#templ_simpl_head="$(printf '%s' "$templ_simpl" | head -6)"
	#templ_simpl_footer="<footer></footer>"


	test_h1 "Templates"
	# ========================

	test_h2 "Routing"
	# ~~~~~~~~~~~~~~~~~~~~~~~~

	# T: Just the index and some other
	mkdir -p -- "$dir_tem"
	printf 'index\n' > "$dir_tem/index.html"
	printf 'other\n' > "$dir_tem/other.html"
	webera -tC \
		"template : route : index.html : /
	     template : route : other.html : /some-other-url/"
	assert "[[ -f $dir_out/index.html ]]"
	# T: check the contents are there
	assert "$(<$dir_out/index.html)"


	test_clean


	# T: Route to a file, and another
	mkdir -p -- "$dir_tem"
	printf '%s' "$templ_simpl" > "$dir_tem/mytemplate.html"
	webera -tC \
		"template : route : mytemplate.html : my-file-url.html"
	assert "[[ -f $dir_out/my-file-url.html]]"
	ls -l $dir_out/my-file-url.html
	assert "$(cat -- $dir_out/my-file-url.html)" "$templ_simpl"

	test_clean
	# T:
	assert "[[ -f out/indsex.html ]]"

	# T:
	#assert "[[ -f out/subdir/index.html ]]"

	#printf '%s\n' "$" > 'tem/index.html'


} #::suite()


[[ "$0" == "${BASH_SOURCE[0]}" ]] && test::init "$@"
